{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\StoreTech\\\\Documents\\\\GitHub\\\\aize-tech\\\\src\\\\components\\\\ProcessFlow.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProcessStepComponent from './ProcessStep';\nimport { getProcesses, createProcess } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProcessFlow = () => {\n  _s();\n  const [processes, setProcesses] = useState([]);\n  const [newProcessName, setNewProcessName] = useState('');\n  const [newStepName, setNewStepName] = useState('');\n  useEffect(() => {\n    const fetchProcesses = async () => {\n      const data = await getProcesses();\n      console.log(data);\n      setProcesses(data.Items);\n    };\n    fetchProcesses();\n  }, []);\n  const handleAddStep = processId => {\n    const updatedProcesses = processes.map(process => {\n      if (process.id === processId) {\n        const newStep = {\n          id: Date.now().toString(),\n          name: newStepName\n        };\n        return {\n          ...process,\n          steps: [...process.steps, newStep]\n        };\n      }\n      return process;\n    });\n    setProcesses(updatedProcesses);\n  };\n  const handleRemoveStep = (processId, stepId) => {\n    const updatedProcesses = processes.map(process => {\n      if (process.id === processId) {\n        return {\n          ...process,\n          steps: process.steps.filter(step => step.id !== stepId)\n        };\n      }\n      return process;\n    });\n    setProcesses(updatedProcesses);\n  };\n  const handleCreateProcess = async () => {\n    const newProcess = {\n      id: Date.now().toString(),\n      name: newProcessName,\n      steps: []\n    };\n    const createdProcess = await createProcess(newProcess);\n    setProcesses([...processes, createdProcess]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newProcessName,\n      onChange: e => setNewProcessName(e.target.value),\n      placeholder: \"New process name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateProcess,\n      children: \"Create Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), processes && processes.map(process => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: process.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newStepName,\n        onChange: e => setNewStepName(e.target.value),\n        placeholder: \"New step name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddStep(process.id),\n        children: \"Add Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), process.steps.map(step => /*#__PURE__*/_jsxDEV(ProcessStepComponent, {\n        step: step,\n        onRemove: stepId => handleRemoveStep(process.id, stepId)\n      }, step.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))]\n    }, process.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ProcessFlow, \"YDWxyL97klOGvOgJnsj8AcglpQM=\");\n_c = ProcessFlow;\nexport default ProcessFlow;\nvar _c;\n$RefreshReg$(_c, \"ProcessFlow\");","map":{"version":3,"names":["React","useState","useEffect","ProcessStepComponent","getProcesses","createProcess","jsxDEV","_jsxDEV","ProcessFlow","_s","processes","setProcesses","newProcessName","setNewProcessName","newStepName","setNewStepName","fetchProcesses","data","console","log","Items","handleAddStep","processId","updatedProcesses","map","process","id","newStep","Date","now","toString","name","steps","handleRemoveStep","stepId","filter","step","handleCreateProcess","newProcess","createdProcess","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onRemove","_c","$RefreshReg$"],"sources":["C:/Users/StoreTech/Documents/GitHub/aize-tech/src/components/ProcessFlow.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Process, ProcessStepType } from '../types';\r\nimport ProcessStepComponent from './ProcessStep';\r\nimport { getProcesses, createProcess, updateProcess, deleteProcess } from '../services/api';\r\n\r\nconst ProcessFlow: React.FC = () => {\r\n  const [processes, setProcesses] = useState<Process[]>([]);\r\n  const [newProcessName, setNewProcessName] = useState('');\r\n  const [newStepName, setNewStepName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchProcesses = async () => {\r\n      const data = await getProcesses();\r\n\r\n      console.log(data)\r\n      setProcesses(data.Items);\r\n    };\r\n    fetchProcesses();\r\n  }, []);\r\n\r\n  const handleAddStep = (processId: string) => {\r\n    const updatedProcesses = processes.map((process) => {\r\n      if (process.id === processId) {\r\n        const newStep: ProcessStepType = { id: Date.now().toString(), name: newStepName };\r\n        return { ...process, steps: [...process.steps, newStep] };\r\n      }\r\n      return process;\r\n    });\r\n    setProcesses(updatedProcesses);\r\n  };\r\n\r\n  const handleRemoveStep = (processId: string, stepId: string) => {\r\n    const updatedProcesses = processes.map((process) => {\r\n      if (process.id === processId) {\r\n        return { ...process, steps: process.steps.filter((step) => step.id !== stepId) };\r\n      }\r\n      return process;\r\n    });\r\n    setProcesses(updatedProcesses);\r\n  };\r\n\r\n  const handleCreateProcess = async () => {\r\n    const newProcess: Process = { id: Date.now().toString(), name: newProcessName, steps: [] };\r\n    const createdProcess = await createProcess(newProcess);\r\n    setProcesses([...processes, createdProcess]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={newProcessName}\r\n        onChange={(e) => setNewProcessName(e.target.value)}\r\n        placeholder=\"New process name\"\r\n      />\r\n      <button onClick={handleCreateProcess}>Create Process</button>\r\n      {processes && processes.map((process) => (\r\n        <div key={process.id}>\r\n          <h3>{process.name}</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={newStepName}\r\n            onChange={(e) => setNewStepName(e.target.value)}\r\n            placeholder=\"New step name\"\r\n          />\r\n          <button onClick={() => handleAddStep(process.id)}>Add Step</button>\r\n          {process.steps.map((step) => (\r\n            <ProcessStepComponent key={step.id} step={step} onRemove={(stepId) => handleRemoveStep(process.id, stepId)} />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProcessFlow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}