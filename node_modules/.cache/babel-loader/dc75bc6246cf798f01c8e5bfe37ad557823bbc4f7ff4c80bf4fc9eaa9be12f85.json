{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\StoreTech\\\\Documents\\\\GitHub\\\\aize-tech\\\\src\\\\ui\\\\components\\\\Fluxograma.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, MiniMap, Controls, Background, applyEdgeChanges, applyNodeChanges } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Input Node'\n  },\n  position: {\n    x: 250,\n    y: 0\n  }\n}, {\n  id: '2',\n  data: {\n    label: 'Default Node'\n  },\n  position: {\n    x: 100,\n    y: 100\n  }\n}, {\n  id: '3',\n  data: {\n    label: 'Output Node'\n  },\n  position: {\n    x: 400,\n    y: 100\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  animated: true\n}, {\n  id: 'e2-3',\n  source: '2',\n  target: '3'\n}];\nconst Fluxograma = () => {\n  _s();\n  const [nodes, setNodes] = React.useState(initialNodes);\n  const [edges, setEdges] = React.useState(initialEdges);\n  const [nodeId, setNodeId] = React.useState(4);\n  const [processName, setProcessName] = React.useState('');\n  const onNodesChange = changes => setNodes(nds => applyNodeChanges(changes, nds));\n  const onEdgesChange = changes => setEdges(eds => applyEdgeChanges(changes, eds));\n  const onConnect = connection => setEdges(eds => addEdge(connection, eds));\n  const addNode = () => {\n    if (!processName) {\n      alert('Por favor, insira um nome para o processo.');\n      return;\n    }\n    const newNode = {\n      id: `${nodeId}`,\n      data: {\n        label: `Node ${nodeId}`\n      },\n      position: {\n        x: Math.random() * 500,\n        y: Math.random() * 500\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n    setNodeId(id => id + 1);\n    setProcessName('');\n  };\n  const removeNode = () => {\n    setNodes(nds => nds.slice(0, -1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center h-full bg-gray-100 w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: processName,\n        onChange: e => setProcessName(e.target.value),\n        placeholder: \"Nome do processo\",\n        className: \"mr-2 px-4 py-2 border border-gray-300 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNode,\n        className: \"mr-2 px-4 py-2 bg-blue-500 text-white rounded\",\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeNode,\n        className: \"px-4 py-2 bg-red-500 text-white rounded\",\n        children: \"Remove Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full\",\n      children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          style: {\n            width: '100%',\n            height: '90vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Fluxograma, \"3jwys40h1iW7cLynIQkCWqouM/4=\");\n_c = Fluxograma;\nexport default Fluxograma;\nvar _c;\n$RefreshReg$(_c, \"Fluxograma\");","map":{"version":3,"names":["React","ReactFlow","ReactFlowProvider","addEdge","MiniMap","Controls","Background","applyEdgeChanges","applyNodeChanges","jsxDEV","_jsxDEV","initialNodes","id","type","data","label","position","x","y","initialEdges","source","target","animated","Fluxograma","_s","nodes","setNodes","useState","edges","setEdges","nodeId","setNodeId","processName","setProcessName","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","connection","addNode","alert","newNode","Math","random","concat","removeNode","slice","className","children","value","onChange","e","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/StoreTech/Documents/GitHub/aize-tech/src/ui/components/Fluxograma.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Connection,\r\n  Edge,\r\n  Node,\r\n  applyEdgeChanges,\r\n  applyNodeChanges,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\n\r\nconst initialNodes: Node[] = [\r\n  { id: '1', type: 'input', data: { label: 'Input Node' }, position: { x: 250, y: 0 } },\r\n  { id: '2', data: { label: 'Default Node' }, position: { x: 100, y: 100 } },\r\n  { id: '3', data: { label: 'Output Node' }, position: { x: 400, y: 100 } },\r\n];\r\n\r\nconst initialEdges: Edge[] = [\r\n  { id: 'e1-2', source: '1', target: '2', animated: true },\r\n  { id: 'e2-3', source: '2', target: '3' }\r\n];\r\n\r\nconst Fluxograma: React.FC = () => {\r\n  const [nodes, setNodes] = React.useState<Node[]>(initialNodes);\r\n  const [edges, setEdges] = React.useState<Edge[]>(initialEdges);\r\n  const [nodeId, setNodeId] = React.useState<number>(4); \r\n  const [processName, setProcessName] = React.useState<string>(''); \r\n\r\n  const onNodesChange = (changes: any) => setNodes((nds) => applyNodeChanges(changes, nds));\r\n  const onEdgesChange = (changes: any) => setEdges((eds) => applyEdgeChanges(changes, eds));\r\n  const onConnect = (connection: Edge | Connection) => setEdges((eds) => addEdge(connection, eds));\r\n\r\n  const addNode = () => {\r\n    if (!processName) {\r\n      alert('Por favor, insira um nome para o processo.');\r\n      return;\r\n    }\r\n\r\n    const newNode: Node = {\r\n      id: `${nodeId}`,\r\n      data: { label: `Node ${nodeId}` },\r\n      position: { x: Math.random() * 500, y: Math.random() * 500 },\r\n    };\r\n    setNodes((nds) => nds.concat(newNode));\r\n    setNodeId((id) => id + 1);\r\n    setProcessName(''); \r\n  };\r\n\r\n  const removeNode = () => {\r\n    setNodes((nds) => nds.slice(0, -1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center h-full bg-gray-100 w-full\">\r\n      <div className=\"flex mb-4\">\r\n        <input\r\n          type=\"text\"\r\n          value={processName}\r\n          onChange={(e) => setProcessName(e.target.value)}\r\n          placeholder=\"Nome do processo\"\r\n          className=\"mr-2 px-4 py-2 border border-gray-300 rounded\"\r\n        />\r\n        <button\r\n          onClick={addNode}\r\n          className=\"mr-2 px-4 py-2 bg-blue-500 text-white rounded\"\r\n        >\r\n          Add Node\r\n        </button>\r\n        <button\r\n          onClick={removeNode}\r\n          className=\"px-4 py-2 bg-red-500 text-white rounded\"\r\n        >\r\n          Remove Node\r\n        </button>\r\n      </div>\r\n      <div className=\"w-full h-full\">\r\n        <ReactFlowProvider>\r\n          <ReactFlow\r\n            nodes={nodes}\r\n            edges={edges}\r\n            onNodesChange={onNodesChange}\r\n            onEdgesChange={onEdgesChange}\r\n            onConnect={onConnect}\r\n            style={{ width: '100%', height: '90vh' }}\r\n          >\r\n            <MiniMap />\r\n            <Controls />\r\n            <Background />\r\n          </ReactFlow>\r\n        </ReactFlowProvider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fluxograma;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}