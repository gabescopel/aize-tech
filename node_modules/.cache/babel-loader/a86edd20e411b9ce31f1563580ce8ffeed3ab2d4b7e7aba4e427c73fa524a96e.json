{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\StoreTech\\\\Documents\\\\GitHub\\\\aize-tech\\\\src\\\\ui\\\\components\\\\Fluxograma.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactFlow, { ReactFlowProvider, MiniMap, Controls, Background, addEdge, applyEdgeChanges, applyNodeChanges } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\n\n// Definindo os tipos de nós personalizados\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customNodeTypes = {\n  triangle: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'orange',\n      width: 60,\n      height: 60\n    },\n    children: \"\\u25B2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this),\n  rectangle: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'green',\n      width: 80,\n      height: 60\n    },\n    children: \"\\u25AD\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this),\n  circle: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'blue',\n      width: 60,\n      height: 60,\n      borderRadius: '50%'\n    },\n    children: \"\\u25CB\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this),\n  square: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'red',\n      width: 60,\n      height: 60\n    },\n    children: \"\\u25A0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n};\nconst initialNodes = [{\n  id: '1',\n  type: 'triangle',\n  data: {\n    label: 'Triangle Node'\n  },\n  position: {\n    x: 250,\n    y: 0\n  }\n}, {\n  id: '2',\n  type: 'rectangle',\n  data: {\n    label: 'Rectangle Node'\n  },\n  position: {\n    x: 100,\n    y: 100\n  }\n}, {\n  id: '3',\n  type: 'circle',\n  data: {\n    label: 'Circle Node'\n  },\n  position: {\n    x: 400,\n    y: 100\n  }\n}, {\n  id: '4',\n  type: 'square',\n  data: {\n    label: 'Square Node'\n  },\n  position: {\n    x: 250,\n    y: 200\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  animated: true\n}, {\n  id: 'e2-3',\n  source: '2',\n  target: '3'\n}];\nconst Fluxograma = () => {\n  _s();\n  const [nodes, setNodes] = React.useState(initialNodes);\n  const [edges, setEdges] = React.useState(initialEdges);\n  const [nodeId, setNodeId] = React.useState(5); // ID para novos nós\n  const [processName, setProcessName] = React.useState(''); // Nome do processo\n\n  const onNodesChange = changes => setNodes(nds => applyNodeChanges(changes, nds));\n  const onEdgesChange = changes => setEdges(eds => applyEdgeChanges(changes, eds));\n  const onConnect = connection => setEdges(eds => addEdge(connection, eds));\n  const addNode = () => {\n    if (!processName) {\n      alert('Por favor, insira um nome para o processo.');\n      return;\n    }\n    const newNode = {\n      id: `${nodeId}`,\n      type: 'circle',\n      // Alterado temporariamente para círculo, você pode alterá-lo conforme necessário\n      data: {\n        label: processName\n      },\n      position: {\n        x: Math.random() * 500,\n        y: Math.random() * 500\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n    setNodeId(id => id + 1);\n    setProcessName(''); // Limpar o campo de entrada após adicionar o nó\n  };\n  const removeNode = () => {\n    // Remover o último nó da lista\n    setNodes(nds => nds.slice(0, -1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full text-center gap-8 p-8 justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-bold text-gray-900\",\n      children: \"TIMELINE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-center items-center h-3/4 w-10/12 bg-gray-100 m-auto mt-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full\",\n        children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n          children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n            nodes: nodes // Passando os nós\n            ,\n            edges: edges // Passando as arestas\n            ,\n            nodesDraggable: true // Permitindo arrastar e soltar os nós\n            ,\n            onConnect: onConnect // Função chamada quando uma nova conexão é feita\n            ,\n            style: {\n              width: '100%',\n              height: '90vh'\n            },\n            nodeTypes: customNodeTypes,\n            children: [/*#__PURE__*/_jsxDEV(MiniMap, {\n              nodeColor: node => {\n                switch (node.type) {\n                  case 'triangle':\n                    return 'orange';\n                  case 'rectangle':\n                    return 'green';\n                  case 'circle':\n                    return 'blue';\n                  case 'square':\n                    return 'red';\n                  default:\n                    return 'gray';\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-full justify-center py-4 gap-2 bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: processName,\n          onChange: e => setProcessName(e.target.value),\n          placeholder: \"Step\",\n          className: \"px-4 py-2 border border-gray-300 rounded text-sm focus:border-blue-950\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNode,\n          className: \"flex items-center justify-center w-8 h-8 bg-green-800 text-white rounded-full font-bold text-xs\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            fill: \"#fff\",\n            version: \"1.1\",\n            id: \"Capa_1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"14px\",\n            height: \"14px\",\n            viewBox: \"0 0 45.402 45.402\",\n            children: /*#__PURE__*/_jsxDEV(\"g\", {\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M41.267,18.557H26.832V4.134C26.832,1.851,24.99,0,22.707,0c-2.283,0-4.124,1.851-4.124,4.135v14.432H4.141\\r c-2.283,0-4.139,1.851-4.138,4.135c-0.001,1.141,0.46,2.187,1.207,2.934c0.748,0.749,1.78,1.222,2.92,1.222h14.453V41.27\\r c0,1.142,0.453,2.176,1.201,2.922c0.748,0.748,1.777,1.211,2.919,1.211c2.282,0,4.129-1.851,4.129-4.133V26.857h14.435\\r c2.283,0,4.134-1.867,4.133-4.15C45.399,20.425,43.548,18.557,41.267,18.557z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: removeNode,\n          className: \"flex items-center justify-center w-8 h-8 bg-red-900 text-white rounded-full font-bold text-xs\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            fill: \"#fff\",\n            version: \"1.1\",\n            id: \"Capa_1\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"12px\",\n            height: \"12px\",\n            viewBox: \"0 0 41.756 41.756\",\n            children: /*#__PURE__*/_jsxDEV(\"g\", {\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M27.948,20.878L40.291,8.536c1.953-1.953,1.953-5.119,0-7.071c-1.951-1.952-5.119-1.952-7.07,0L20.878,13.809L8.535,1.465\\r c-1.951-1.952-5.119-1.952-7.07,0c-1.953,1.953-1.953,5.119,0,7.071l12.342,12.342L1.465,33.22c-1.953,1.953-1.953,5.119,0,7.071\\r C2.44,41.268,3.721,41.755,5,41.755c1.278,0,2.56-0.487,3.535-1.464l12.343-12.342l12.343,12.343\\r c0.976,0.977,2.256,1.464,3.535,1.464s2.56-0.487,3.535-1.464c1.953-1.953,1.953-5.119,0-7.071L27.948,20.878z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Fluxograma, \"VAhiGEiwVxyp0xm4RgonPZMZlPM=\");\n_c = Fluxograma;\nexport default Fluxograma;\nvar _c;\n$RefreshReg$(_c, \"Fluxograma\");","map":{"version":3,"names":["React","ReactFlow","ReactFlowProvider","MiniMap","Controls","Background","addEdge","applyEdgeChanges","applyNodeChanges","jsxDEV","_jsxDEV","customNodeTypes","triangle","style","background","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","rectangle","circle","borderRadius","square","initialNodes","id","type","data","label","position","x","y","initialEdges","source","target","animated","Fluxograma","_s","nodes","setNodes","useState","edges","setEdges","nodeId","setNodeId","processName","setProcessName","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","connection","addNode","alert","newNode","Math","random","concat","removeNode","slice","className","nodesDraggable","nodeTypes","nodeColor","node","value","onChange","e","placeholder","onClick","fill","version","xmlns","viewBox","d","_c","$RefreshReg$"],"sources":["C:/Users/StoreTech/Documents/GitHub/aize-tech/src/ui/components/Fluxograma.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  MiniMap,\r\n  Controls,\r\n  Background,\r\n  Connection,\r\n  Edge,\r\n  Node,\r\n  addEdge,\r\n  applyEdgeChanges,\r\n  applyNodeChanges,\r\n} from 'react-flow-renderer';\r\nimport 'react-flow-renderer/dist/style.css';\r\n\r\n// Definindo os tipos de nós personalizados\r\nconst customNodeTypes = {\r\n  triangle: () => (\r\n    <div style={{ background: 'orange', width: 60, height: 60 }}>▲</div>\r\n  ),\r\n  rectangle: () => (\r\n    <div style={{ background: 'green', width: 80, height: 60 }}>▭</div>\r\n  ),\r\n  circle: () => (\r\n    <div style={{ background: 'blue', width: 60, height: 60, borderRadius: '50%' }}>○</div>\r\n  ),\r\n  square: () => (\r\n    <div style={{ background: 'red', width: 60, height: 60 }}>■</div>\r\n  ),\r\n};\r\n\r\nconst initialNodes: Node[] = [\r\n  { id: '1', type: 'triangle', data: { label: 'Triangle Node' }, position: { x: 250, y: 0 } },\r\n  { id: '2', type: 'rectangle', data: { label: 'Rectangle Node' }, position: { x: 100, y: 100 } },\r\n  { id: '3', type: 'circle', data: { label: 'Circle Node' }, position: { x: 400, y: 100 } },\r\n  { id: '4', type: 'square', data: { label: 'Square Node' }, position: { x: 250, y: 200 } },\r\n];\r\n\r\nconst initialEdges: Edge[] = [\r\n  { id: 'e1-2', source: '1', target: '2', animated: true },\r\n  { id: 'e2-3', source: '2', target: '3' }\r\n];\r\n\r\nconst Fluxograma: React.FC = () => {\r\n  const [nodes, setNodes] = React.useState<Node[]>(initialNodes);\r\n  const [edges, setEdges] = React.useState<Edge[]>(initialEdges);\r\n  const [nodeId, setNodeId] = React.useState<number>(5); // ID para novos nós\r\n  const [processName, setProcessName] = React.useState<string>(''); // Nome do processo\r\n\r\n  const onNodesChange = (changes: any) => setNodes((nds) => applyNodeChanges(changes, nds));\r\n  const onEdgesChange = (changes: any) => setEdges((eds) => applyEdgeChanges(changes, eds));\r\n  const onConnect = (connection: Edge | Connection) => setEdges((eds) => addEdge(connection, eds));\r\n\r\n  const addNode = () => {\r\n    if (!processName) {\r\n      alert('Por favor, insira um nome para o processo.');\r\n      return;\r\n    }\r\n\r\n    const newNode: Node = {\r\n      id: `${nodeId}`,\r\n      type: 'circle', // Alterado temporariamente para círculo, você pode alterá-lo conforme necessário\r\n      data: { label: processName },\r\n      position: { x: Math.random() * 500, y: Math.random() * 500 },\r\n    };\r\n    setNodes((nds) => nds.concat(newNode));\r\n    setNodeId((id) => id + 1);\r\n    setProcessName(''); // Limpar o campo de entrada após adicionar o nó\r\n  };\r\n\r\n  const removeNode = () => {\r\n    // Remover o último nó da lista\r\n    setNodes((nds) => nds.slice(0, -1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full text-center gap-8 p-8 justify-center\">\r\n      <h2 className=\"text-lg font-bold text-gray-900\">TIMELINE</h2>\r\n      <div className=\"flex flex-col justify-center items-center h-3/4 w-10/12 bg-gray-100 m-auto mt-0\">\r\n        <div className=\"w-full h-full\">\r\n          <ReactFlowProvider>\r\n          <ReactFlow\r\n  nodes={nodes} // Passando os nós\r\n  edges={edges} // Passando as arestas\r\n  nodesDraggable={true} // Permitindo arrastar e soltar os nós\r\n  onConnect={onConnect} // Função chamada quando uma nova conexão é feita\r\n  style={{ width: '100%', height: '90vh' }}\r\n  nodeTypes={customNodeTypes}\r\n>\r\n  <MiniMap\r\n    nodeColor={(node) => {\r\n      switch (node.type) {\r\n        case 'triangle':\r\n          return 'orange';\r\n        case 'rectangle':\r\n          return 'green';\r\n        case 'circle':\r\n          return 'blue';\r\n        case 'square':\r\n          return 'red';\r\n        default:\r\n          return 'gray';\r\n      }\r\n    }}\r\n  />\r\n  <Controls />\r\n  <Background />\r\n</ReactFlow>\r\n\r\n          </ReactFlowProvider>\r\n        </div>\r\n        <div className=\"flex w-full justify-center py-4 gap-2 bg-white\">\r\n          <input\r\n            type=\"text\"\r\n            value={processName}\r\n            onChange={(e) => setProcessName(e.target.value)}\r\n            placeholder=\"Step\"\r\n            className=\"px-4 py-2 border border-gray-300 rounded text-sm focus:border-blue-950\"\r\n          />\r\n          <button\r\n            onClick={addNode}\r\n            className=\"flex items-center justify-center w-8 h-8 bg-green-800 text-white rounded-full font-bold text-xs\"\r\n          >\r\n            <svg fill=\"#fff\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14px\" height=\"14px\" viewBox=\"0 0 45.402 45.402\">\r\n              <g>\r\n                <path d=\"M41.267,18.557H26.832V4.134C26.832,1.851,24.99,0,22.707,0c-2.283,0-4.124,1.851-4.124,4.135v14.432H4.141\r\n                  c-2.283,0-4.139,1.851-4.138,4.135c-0.001,1.141,0.46,2.187,1.207,2.934c0.748,0.749,1.78,1.222,2.92,1.222h14.453V41.27\r\n                  c0,1.142,0.453,2.176,1.201,2.922c0.748,0.748,1.777,1.211,2.919,1.211c2.282,0,4.129-1.851,4.129-4.133V26.857h14.435\r\n                  c2.283,0,4.134-1.867,4.133-4.15C45.399,20.425,43.548,18.557,41.267,18.557z\"/>\r\n              </g>\r\n            </svg>\r\n          </button>\r\n          <button\r\n            onClick={removeNode}\r\n            className=\"flex items-center justify-center w-8 h-8 bg-red-900 text-white rounded-full font-bold text-xs\"\r\n          >\r\n            <svg fill=\"#fff\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"12px\" height=\"12px\" viewBox=\"0 0 41.756 41.756\">\r\n              <g>\r\n                <path d=\"M27.948,20.878L40.291,8.536c1.953-1.953,1.953-5.119,0-7.071c-1.951-1.952-5.119-1.952-7.07,0L20.878,13.809L8.535,1.465\r\n                  c-1.951-1.952-5.119-1.952-7.07,0c-1.953,1.953-1.953,5.119,0,7.071l12.342,12.342L1.465,33.22c-1.953,1.953-1.953,5.119,0,7.071\r\n                  C2.44,41.268,3.721,41.755,5,41.755c1.278,0,2.56-0.487,3.535-1.464l12.343-12.342l12.343,12.343\r\n                  c0.976,0.977,2.256,1.464,3.535,1.464s2.56-0.487,3.535-1.464c1.953-1.953,1.953-5.119,0-7.071L27.948,20.878z\"/>\r\n              </g>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fluxograma;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}